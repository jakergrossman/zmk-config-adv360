#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        sym_row_1: sym_row_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_1";
            bindings = <&kp PLUS>, <&kp NUMBER_1>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_2: sym_row_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_2";
            bindings = <&kp LEFT_BRACKET>, <&kp NUMBER_2>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_3: sym_row_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_3";
            bindings = <&kp LEFT_BRACE>, <&kp NUMBER_3>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_5: sym_row_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_5";
            bindings = <&kp AMPERSAND>, <&kp N5>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_6: sym_row_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_6";
            bindings = <&kp EQUAL>, <&kp NUMBER_6>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_7: sym_row_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_7";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp NUMBER_7>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_8: sym_row_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_8";
            bindings = <&kp RIGHT_BRACE>, <&kp NUMBER_8>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_9: sym_row_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_9";
            bindings = <&kp RIGHT_BRACKET>, <&kp NUMBER_9>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_0: sym_row_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_0";
            bindings = <&kp ASTRK>, <&kp NUMBER_0>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        backslash_pound: backslash_pound {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSLASH_POUND";
            bindings = <&kp BACKSLASH>, <&kp HASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        excl_pct: excl_pct {
            compatible = "zmk,behavior-mod-morph";
            label = "EXCL_PCT";
            bindings = <&kp EXCLAMATION>, <&kp PERCENT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        at_uptick: at_uptick {
            compatible = "zmk,behavior-mod-morph";
            label = "AT_UPTICK";
            bindings = <&kp AT_SIGN>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        pipe_grave: pipe_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "PIPE_GRAVE";
            bindings = <&kp PIPE>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        dollar_tilde: dollar_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "DOLLAR_TILDE";
            bindings = <&kp DOLLAR>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };

        sym_row_4: sym_row_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "SYM_ROW_4";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp NUMBER_4>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&dollar_tilde  &sym_row_1     &sym_row_2  &sym_row_3  &sym_row_4  &sym_row_5  &kp K_COPY   &kp K_CALCULATOR  &sym_row_6  &sym_row_7  &sym_row_8     &sym_row_9     &sym_row_0  &excl_pct
&kp SLASH      &kp SQT        &kp COMMA   &kp PERIOD  &kp P       &kp Y       &kp K_PASTE  &at_uptick        &kp F       &kp G       &kp C          &kp R          &kp L       &kp BSLH
&lt 1 ESCAPE   &kp A          &kp O       &kp E       &kp U       &kp I       &kp K_CUT    &kp LGUI          &kp LALT                               &kp RIGHT_ALT  &kp RCTRL   &pipe_grave  &kp D     &kp H  &kp T  &kp N  &kp S     &kp MINUS
&kp LSHFT      &kp SEMICOLON  &kp Q       &kp J       &kp K       &kp X       &none        &none             &kp HOME    &none       &none          &kp PG_UP      &none       &none        &kp B     &kp M  &kp W  &kp V  &kp FSLH  &kp RSHFT
&mo 1          &kp F13        &kp F14     &kp F15     &kp F16     &kp SPACE   &kp TAB      &kp END           &kp PG_DN   &kp ENTER   &kp BACKSPACE  &kp UP         &kp DOWN    &kp LBKT     &kp RBKT  &mo 1
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4    &kp F5        &kp F6          &tog 2  &mo 4   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11    &kp F12
&trans  &trans  &trans  &trans    &trans        &kp K_UNDO      &none   &none   &trans  &trans  &trans  &trans   &kp RIGHT  &trans
&trans  &trans  &trans  &trans    &trans        &kp LC(K_REDO)  &none   &trans  &trans                  &trans   &trans     &none    &kp LEFT  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp DOWN  &kp UP_ARROW  &kp DELETE      &none   &none   &trans  &none   &none   &trans   &none      &none    &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans   &trans     &trans   &trans    &trans
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5    &trans   &mo 4      &kp N6     &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T     &none    &none      &kp Y      &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G     &none    &kp LCTRL  &kp LALT                             &kp LGUI       &kp RCTRL        &none       &kp H     &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B     &none    &none      &kp HOME   &none       &none         &kp PG_UP      &none            &none       &kp N     &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp RSHFT
&mo 1      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT  &kp BKSP  &kp DEL  &kp END    &kp PG_DN  &kp ENTER   &kp KP_N0     &kp UP         &kp DOWN         &kp KP_DOT  &kp RBKT  &mo 1
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &none                   &trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none            &bootloader             &bootloader  &none         &none         &none            &none         &none         &none
&none  &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &bt BT_CLR                                   &bt BT_CLR    &bt BT_CLR    &rgb_ug RGB_MEFS_CMD 5  &none  &none  &none  &none  &none  &none
&none  &none         &none         &none         &none         &none            &none                   &none        &none         &none         &none            &none         &none         &none                   &none  &none  &none  &none  &none  &none
&none  &none         &none         &bl BL_INC    &bl BL_DEC    &rgb_ug RGB_TOG  &bl BL_TOG              &none        &none         &bl BL_TOG    &rgb_ug RGB_TOG  &bl BL_INC    &bl BL_DEC    &none                   &none  &none
            >;
        };

        qwerty_island {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans  &trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp EQUAL
&kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T   &trans  &trans  &kp Y   &kp U   &kp I   &kp O   &kp P   &trans
&trans     &kp A   &kp S   &kp D   &kp F   &kp G   &trans  &trans  &trans                  &trans  &trans  &trans     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&trans     &kp Z   &kp X   &kp C   &kp V   &kp B   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
&trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans
            >;
        };
    };
};
